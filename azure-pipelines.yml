name: $(SourceBranchName)_$(Date:yyyyMMdd)$(Rev:.r)

variables:
  IS_MASTER_BRANCH: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]
  PIPENV_CACHE_DIR: $(Pipeline.Workspace)/.pipenv_cache

stages:
  - stage: test
    displayName: Test
    jobs:
      - job: test
        displayName: Test
        steps:
          - template: azure-pipelines-setup.yml

          - script: |
              pipenv run lint
              pipenv run check-types
            displayName: Lint

          - script: pipenv run test
            displayName: Test

  - stage: publish
    displayName: Publish
    condition: eq(variables.IS_MASTER_BRANCH, true)
    dependsOn: test
    jobs:
      - job: publish
        displayName: Publish Library
        steps:
          - checkout: self
            persistCredentials: true
            clean: true

          - template: azure-pipelines-setup.yml

          - script: |
              git config --global user.email "semantic@release.com"
              git config --global user.name "Semantic Release"
              pipenv run publish
            displayName: Publish

      - job: deploy
        displayName: Deploy
        steps:
          - template: azure-pipelines-setup.yml

          - script: |
              npm install -g serverless
              serverless plugin install -n serverless-python-requirements
            displayName: Install Serverless

          - script: |
              pipenv run sls deploy
            displayName: Deploy to AWS

          - script: |
              pipenv run sls invoke local -f generate-message-suggestions -p events/me-and-ben.json
            displayName: Invoke Lambda
